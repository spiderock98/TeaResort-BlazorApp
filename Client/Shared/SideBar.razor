@inject NavigationManager navigationHelper
@inject IJSRuntime JSHelper
<!-- Main Sidebar Container -->
<aside class="main-sidebar sidebar-light-cyan elevation-4 position-fixed">
    <!-- Brand Logo -->
    <a href="#" class="brand-link" style="background-color:white;">
        <img src="public/img/daikin-logo.png" alt="Daikin-Logo" class="brand-image-xl logo-xl"
            style="max-width: 206px;max-height: 206px;">
        <img src="public/img/daikin-logo-square.png" alt="Daikin-Logo" class="brand-image-xs logo-xs"
            style="max-width: 43px;max-height: 43px;">
        <span class="brand-text font-weight-light">.</span>
    </a>

    <!-- Sidebar -->
    <div class="sidebar">

        <!-- Sidebar user panel -->
        <div class="user-panel mt-3 pb-3 mb-3 d-flex">
            <div class="image">
                <img src="AdminLte/dist/img/user2-160x160.jpg" class="img-circle elevation-2" alt="User Image">
            </div>
            <div class="info user-select-none">
                <a class="d-block" @onclick=@(() => { SelectMenu("profile"); })>System Admin</a>
            </div>
        </div>

        <!-- Sidebar Menu -->
        <nav class="mt-2">
            <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                <!-- Add icons to the links using the .nav-icon class
    with font-awesome or any other icon font library -->
                <li class="nav-item">
                    <a class="nav-link @CheckActiveStatus("dashboard","active")" @onclick=@(() =>
                        SelectMenu("dashboard"))>
                        <i class="nav-icon fas fa-tachometer-alt"></i>
                        <p class="font-weight-bolder user-select-none">
                            DASHBOARD
                            @*<i class="right fas fa-angle-left"></i>*@
                        </p>
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link @CheckActiveStatus("gateway","active")" @onclick=@(() => SelectMenu("gateway"))>
                        <i class="nav-icon fas fa-eye"></i>
                        <p class="font-weight-bolder user-select-none">
                            GATEWAY LISTING
                        </p>
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link @CheckActiveStatus("ac","active")" @onclick=@(() => SelectMenu("ac"))>
                        <i class="nav-icon fas fa-eye"></i>
                        <p class="font-weight-bolder user-select-none">
                            AC LISTING
                        </p>
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link @CheckActiveStatus("schedule","active")" @onclick=@(() =>
                        SelectMenu("schedule"))>
                        <i class="nav-icon fas fa-calendar-alt"></i>
                        <p class="font-weight-bolder user-select-none">
                            SCHEDULE PROFILES
                        </p>
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link @CheckActiveStatus("interlock","active")" @onclick=@(() =>
                        SelectMenu("interlock"))>
                        <i class="nav-icon fas fa-door-closed"></i>
                        <p class="font-weight-bolder user-select-none">
                            INTERLOCK PROFILES
                        </p>
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link @CheckActiveStatus("energy","active")" @onclick=@(() => SelectMenu("energy"))>
                        <i class="nav-icon fas fa-chart-line"></i>
                        <p class="font-weight-bolder user-select-none">
                            ENERGY DAILY USE
                        </p>
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link @CheckActiveStatus("users","active")" @onclick=@(() => SelectMenu("users"))>
                        <i class="nav-icon fas fa-users"></i>
                        <p class="font-weight-bolder user-select-none">
                            USERS MANAGEMENT
                        </p>
                    </a>
                </li>

                <li class="nav-item">
                    <a href="#collapseLayout" class="nav-link @CheckActiveStatus("layout_area","active")" @onclick=@(()
                        => { SelectMenu("layout_area"); ToggleArrow("layout_area"); }) data-toggle="collapse">
                        <i class="nav-icon fas fa-terminal"></i>
                        <p class="font-weight-bolder user-select-none">
                            Layout Management
                            <i class="@CheckArrowStatus("layout_area") right"></i>
                        </p>
                    </a>

                    <ul class="nav collapse" id="collapseLayout">
                        <li>
                            <a class="nav-link @CheckActiveStatus("layout_area","active")" @onclick=@(() => {
                                SelectMenu("layout_area"); })>
                                <i class="nav-icon far fa-circle nav-icon"></i>
                                <p class="font-weight-bolder user-select-none">
                                    Area
                                </p>
                            </a>
                        </li>
                        <li>
                            <a class="nav-link @CheckActiveStatus("layout_zone","active")" @onclick=@(() => {
                                SelectMenu("layout_zone"); })>
                                <i class="nav-icon far fa-circle nav-icon"></i>
                                <p class="font-weight-bolder user-select-none">
                                    Zone
                                </p>
                            </a>
                        </li>
                        <li>
                            <a class="nav-link @CheckActiveStatus("layout_room","active")" @onclick=@(() => {
                                SelectMenu("layout_room"); })>
                                <i class="nav-icon far fa-circle nav-icon"></i>
                                <p class="font-weight-bolder user-select-none">
                                    Room
                                </p>
                            </a>
                        </li>
                    </ul>
                </li>

                <li class="nav-item">
                    <a class="nav-link @CheckActiveStatus("logs","active")" @onclick=@(() => SelectMenu("logs"))>
                        <i class="nav-icon fas fa-history"></i>
                        <p class="font-weight-bolder user-select-none">
                            HISTORY LOGS
                        </p>
                    </a>
                </li>

            </ul>
        </nav>
        <!-- /.sidebar-menu -->
    </div>
    <!-- /.sidebar -->
</aside>

@code {
    Dictionary<string, string> menuPaths = new Dictionary<string, string>()
{
{"dashboard","/dashboard"}, {"ac","/ac"} , {"schedule", "/schedule"}, {"energy", "/energy"}, {"users", "/users"}, {"profile","profile"}, {"logs", "logs"}, { "interlock", "/interlock" }, { "layout_area", "/layout_area" },{ "layout_zone", "/layout_zone" }, { "layout_room", "/layout_room" }, { "gateway", "/gateway" }
};

    Dictionary<string, bool> arrowDir = new Dictionary<string, bool>()
    {
        { "layout_area", false}
    };
    string currentMenu = "";

    protected override async Task OnInitializedAsync()
    {
        currentMenu = navigationHelper.ToBaseRelativePath(navigationHelper.Uri);
        //if (currentMenu == string.Empty) SelectMenu("dashboard");
        if (currentMenu == string.Empty) navigationHelper.NavigateTo("/ac");

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }
    }

    protected void ToggleArrow(string menu)
    {
        var isCollapse = arrowDir[menu];
        arrowDir[menu] = isCollapse ? false : true;
    }

    private string CheckArrowStatus(string menu)
    {
        return arrowDir[menu] ? "fas fa-angle-down" : "fas fa-angle-left";
    }

    void SelectMenu(string menu)
    {
        try
        {
            currentMenu = menu;
            navigationHelper.NavigateTo(menuPaths[currentMenu]);
        }
        catch (Exception exp)
        { }
    }

    bool isMenuDashboardOpen = false;
    private string ToogleMenu(string menu, string cssPath)
    {
        isMenuDashboardOpen = !isMenuDashboardOpen;
        if (isMenuDashboardOpen)
        {
            try
            {
                if (currentMenu == menu) return cssPath;
                else return "";

            }
            catch (Exception exp)
            { return ""; }
        }
        else
        {
            return "";
        }

    }

    private string CheckActiveStatus(string menu, string cssPath)
    {
        try
        {
            if (currentMenu == menu) return cssPath;
            else return "";
        }
        catch (Exception exp)
        { return ""; }
    }
}